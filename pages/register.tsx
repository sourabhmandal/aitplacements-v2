import { useEffect, useState } from "react";
import Image from "next/image";
import aitlogo from "../assets/aitlogo.gif";
import Head from "next/head";
import Link from "next/link";
import { NextPage } from "next";
import {
  Box,
  Button,
  Grid,
  TextField,
  Typography,
  Stack,
  FormControl,
  InputLabel,
  Select,
  MenuItem,
  FilledInput,
  IconButton,
  InputAdornment,
} from "@mui/material";
import { Visibility, VisibilityOff } from "@mui/icons-material";
import { BACKEND_ROUTES, FRONTEND_ROUTES } from "./api/routes";
import { useRouter } from "next/router";
import { IDropdown } from "../types";
import toast, { Toaster } from "react-hot-toast";
import { useCookies } from "react-cookie";

const yearList: IDropdown[] = [
  { key: "Third Year(TE)", value: "TE" },
  { key: "Final Year(BE)", value: "BE" },
  { key: "Master 2nd Year(ME)", value: "ME" },
];
const branchList: IDropdown[] = [
  { key: "Compouter Science(COMP)", value: "COMP" },
  { key: "Info Technology(IT)", value: "IT" },
  { key: "Electronics & Comm(EnTC)", value: "ENTC" },
  { key: "Mechanical(Mech)", value: "MECH" },
];

const Register: NextPage = () => {
  const router = useRouter();
  const [selectedYear, setselectedYear] = useState(yearList[0].value);
  const [selectedBranch, setselectedBranch] = useState(branchList[0].value);
  const [firstName, setfirstName] = useState("");
  const [lastName, setlastName] = useState("");
  const [regNo, setregNo] = useState<number>();
  const [email, setemail] = useState("");
  const [password, setpassword] = useState("");
  const [showPassword, setshowPassword] = useState<boolean>(false);

  useEffect(() => {
    //  router.push(FRONTEND_ROUTES.DASHBOARD);
    return () => {};
  }, [router]);

  async function sendRegisterCred() {
    const registerapi = fetch(BACKEND_ROUTES.REGISTER, {
      method: "POST",
      body: JSON.stringify({
        firstName,
        lastName,
        email,
        selectedBranch,
        selectedYear,
        regNo,
        password,
      }),
    });
    const resp = await registerapi;
    const data = await resp.json();

    if (data.error) {
      toast.error(data.error.toString());
    } else {
      toast.success("Email verification sent");
    }
  }

  const handleMouseDownPassword = (
    event: React.MouseEvent<HTMLButtonElement>
  ) => {
    event.preventDefault();
  };

  return (
    <div>
      <Toaster />
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Box
          display="flex"
          flexDirection="column"
          alignItems="center"
          justifyContent="center"
          height="100vh"
          margin={"auto"}
        >
          <a className="inline-block mb-6" href="#">
            <Image width={60} height={60} src={aitlogo} alt="" />
          </a>

          <Typography
            variant="h3"
            className="mb-4 text-2xl md:text-3xl font-bold"
          >
            Sign in to your account
          </Typography>
          <Grid
            container
            direction="column"
            spacing={2}
            justifyContent="center"
            sx={{ width: 800 }}
          >
            <Grid item>
              <Stack direction="row" spacing={2}>
                <TextField
                  fullWidth
                  required
                  id="standard-required"
                  label="First Name"
                  variant="filled"
                  value={firstName}
                  onChange={(e) => setfirstName(e.target.value)}
                />

                <TextField
                  fullWidth
                  required
                  id="standard-required"
                  label="Last Name"
                  variant="filled"
                  value={lastName}
                  onChange={(e) => setlastName(e.target.value)}
                />
              </Stack>
            </Grid>

            <Grid item>
              <TextField
                fullWidth
                required
                id="standard-required"
                label="College Email"
                variant="filled"
                placeholder="ankit_72781@aitpune.edu.in"
                value={email}
                onChange={(e) => {
                  setemail(e.target.value);
                }}
              />
            </Grid>
            <Grid item>
              <Stack direction="row" spacing={2}>
                <FormControl fullWidth variant="filled">
                  <InputLabel id="demo-simple-select-filled-label">
                    Branch
                  </InputLabel>
                  <Select
                    variant="filled"
                    label="Year"
                    labelId="demo-simple-select-filled-label"
                    id="demo-simple-select-filled"
                    value={selectedBranch}
                    onChange={(e) => setselectedBranch(e.target.value)}
                    fullWidth
                  >
                    {branchList.map((branch, key) => (
                      <MenuItem key={key} value={branch.value}>
                        {branch.key}
                      </MenuItem>
                    ))}
                  </Select>
                </FormControl>
                <FormControl fullWidth variant="filled">
                  <InputLabel id="demo-simple-select-filled-label">
                    Year
                  </InputLabel>
                  <Select
                    variant="filled"
                    label="Year"
                    labelId="demo-simple-select-filled-label"
                    id="demo-simple-select-filled"
                    value={selectedYear}
                    onChange={(e) => setselectedYear(e.target.value)}
                    fullWidth
                  >
                    {yearList.map((year, key) => (
                      <MenuItem key={key} value={year.value}>
                        {year.key}
                      </MenuItem>
                    ))}
                  </Select>
                </FormControl>
              </Stack>
            </Grid>

            <Grid item>
              <TextField
                fullWidth
                required
                type="number"
                id="standard-required"
                label="Registration Number"
                variant="filled"
                value={regNo}
                onChange={(e) => {
                  const num = parseInt(e.target.value);
                  setregNo(num);
                }}
              />
            </Grid>

            <Grid item>
              <FormControl variant="filled" fullWidth>
                <InputLabel htmlFor="outlined-adornment-password">
                  Password
                </InputLabel>
                <FilledInput
                  id="outlined-adornment-password"
                  type={showPassword ? "text" : "password"}
                  value={password}
                  onChange={(e) => setpassword(e.target.value)}
                  endAdornment={
                    <InputAdornment position="end">
                      <IconButton
                        aria-label="toggle password visibility"
                        onClick={() => setshowPassword((prev) => !prev)}
                        onMouseDown={handleMouseDownPassword}
                        edge="end"
                      >
                        {showPassword ? <VisibilityOff /> : <Visibility />}
                      </IconButton>
                    </InputAdornment>
                  }
                />
              </FormControl>
            </Grid>
            <Grid item>
              <Button
                variant="contained"
                color="success"
                size="large"
                fullWidth
                onClick={sendRegisterCred}
              >
                Register
              </Button>
            </Grid>

            <Grid item sx={{ cursor: "pointer" }}>
              <Box sx={{ textAlign: "left" }}>
                Already Have an Account?
                <Link passHref href="/login">
                  <Typography
                    variant="body2"
                    sx={{ fontWeight: 700 }}
                    color="slateblue"
                  >
                    Login
                  </Typography>
                </Link>
              </Box>
            </Grid>
          </Grid>
        </Box>
      </main>

      <footer></footer>
    </div>
  );
};
export default Register;
